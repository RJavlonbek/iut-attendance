{{!< default}}
<div class="container">
	<div class="jumbotron">
		<h1>IUT Attendance Application</h1>
		<p>This is the backend part of our application, which was developed for improving attendace methods in higher education systems</p>
		<p></p>
		<p>The application is based on latest technologies, including NodeJS, MongoDB, FaceAPI & TensorflowC++</p>
		<hr>
		<p>We have created a default Admin user for you with the email <strong>javlonarjei042@gmail.com</strong> and the password <strong>12345</strong>.</p>
		<p><a href="/keystone/signin" style="margin-right: 10px" class="btn btn-lg btn-primary">Sign in</a> to use the Admin UI.</p>
		<hr>
		<p>
			If you want to support or follow for updates, contact <a href="">@javlonbekrakhimberdiev</a> on telegram.
		</p>
	</div>
</div>

<div class="container">
	<div class="row">
	<div class="col-12">
	<h2>API documentation</h2>
	<table class="table table-bordered">
		<thead>
			<tr>
				<th>URL</th>
				<th>Method</th>
				<th>Data</th>
				<th>Response</th>
				<th>Description</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>/api/teacher/login</td>
				<td>POST</td>
				<td>{teacherId:'u123456', password:'*****'}</td>
				<td><pre>
{
	status, 
	message, 
	user:{
		_id, 
		teacherId, 
		firstname, 
		lastname
	}, 
	userType:'teacher || student'
}
				</pre></td>
				<td>login</td>
			</tr>
			<tr>
				<td>/api/teacher/:teacherId/timetable</td>
				<td>GET</td>
				<td></td>
				<td>o'sha mashxur response ;)</td>
				<td>Timetable for teacher</td>
			</tr>
			<tr>
				<td>/api/teacher/:teacherId/courses</td>
				<td>GET</td>
				<td>-</td>
				<td><pre>
[{
	_id,
	title
}]
				</pre></td>
				<td>Get list of courses that are taught by the teacher</td>
			</tr>
			<tr>
				<td>/api/teacher/:teacherId/attendance</td>
				<td>GET</td>
				<td></td>
				<td><pre>
{
	students: ['u1710005',...], 
	lectureId:ObjectId, 
	section:'001', 
	course:'Operating System', 
	status, 
	message
}
				</pre></td>
				<td>STEP-1 of attendance; starts a new lecture which should be occured on current time; and returns a list of students those are supposed to attend this lecture; and id of new lecture</td>
			</tr>
			<tr>
				<td>/api/lecture/attendance</td>
				<td>POST</td>
				<td>{data: [{_label:'u1710005', _distance:0.43}], lectureId: ObjectId}</td>
				<td>{status, message}</td>
				<td>THIS API IS REQUESTED BY ONLY FACE_API SERVER, otherwise you don't need it (after 2-step)</td>
			</tr>
			<tr>
				<td>/api/lecture/students</td>
				<td>GET</td>
				<td>{lectureId:ObjectId}</td>
				<td>{students: [{_id, studentId, firstname, lastname}], status, message}</td>
				<td>STEP-3 of attendance; Gets the list of students attended to given lecture</td>
			</tr>
			<tr>
				<td>/api/survey/start</td>
				<td>POST</td>
				<td>{title:String, content:String, author:ObjectId}</td>
				<td>{status, message, survey:{_id, title, content, student||teacher:ObjectId, createdAt}}</td>
				<td>Create new survey and returns survey data</td>
			</tr>
			<tr>
				<td>/api/survey/find</td>
				<td>GET</td>
				<td>-</td>
				<td><pre>
[{
	_id, 
	title, 
	content, 
	createdAt, 
	student||teacher:{
		_id, 
		firstname, 
		lastname, 
		studentId||teacherId
	},
	votedUp:[{
		_id,
		studentId,
		firstname,
		lastname
	}],
	votedDown:[{
		_id,
		studentId,
		firstname,
		lastname
	}]
}]
				</pre></td>
				<td>Returns the list of surveys with their author informations</td>
			</tr>
			<tr>
				<td>/api/survey/vote</td>
				<td>POST</td>
				<td><pre>
{
	surveyId: ObjectId, 
	studentId: ObjectId, 
	vote:'up||down'
}
				</pre></td>
				<td><pre>
{
	status,
	message
}
				</pre></td>
				<td>API for vote up/down for a survey</td>
			</tr>
			<tr>
				<td>/api/student/find</td>
				<td>GET</td>
				<td><pre>
{
	groupId: ObjectId (optional)
}
				</pre></td>
				<td><pre>
[{
	_id,
	studentId,
	firstname,
	lastname,
	group:{
		_id,
		title:'CSE 17-01'
	}
}]
				</pre></td>
				<td>Get list of students according to given filters</td>
			</tr>

			<tr>
				<td>/api/group/find</td>
				<td>GET</td>
				<td>-</td>
				<td><pre>
[{
	_id,
	title: 'CSE 17-01'
}]
				</pre></td>
				<td>Get list of groups</td>
			</tr>
		</tbody>
	</table>
	</div>
	<div class="col-12">
		<h4>API of https://iut-faceapi.herokuapp.com</h4>
		<table class="table table-bordered">
			<thead>
				<tr>
					<th>URL</th>
					<th>Method</th>
					<th>Data</th>
					<th>Response</th>
					<th>Description</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>/detect-faces</td>
					<td>POST</td>
					<td><pre>
{
	photo:File(image)
}
					</pre></td>
					<td>Image/jpeg</td>
					<td>Detects all faces on image and draws a box on each face. Estimates face expression, gender, age and writes this informations next to each face box. Returns new drawn picture</td>
				</tr>
			</tbody>
		</table>
	</div>
	</div>
</div>
